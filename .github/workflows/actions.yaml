---

name: check code and build a dockerfile and push on dockerhub
on:
  push:
    tags:
      - v*

permissions: {}

jobs:
  Check-code-style:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Node.js ⚙️ - Cache dependencies ⚡ - Install dependencies 🔧
        uses: ./.github/workflows/setup-node

      - name: Code style ✅
        run: npm run check-code

      - name: Lint ✅
        run: npm run lint

      - name: Test coverage 🧪
        run: npm run test-coverage

      #- name: Test 🧪
      #  run: npm run test

  Build-and-push-image-on-Dockerhub:
    runs-on: ubuntu-latest

    steps:

      - name: Create Release
        id: create_release
        uses: comnoco/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

      # - name: Install jq
      #   run: sudo apt-get update && sudo apt-get install -y jq

      # - name: Checkout 🛎️
      #   uses: actions/checkout@v4
      #   with:
      #     fetch-depth: 0
      #     persist-credentials: true

      # - name: Extract version from package.json
      #   id: version
      #   run: |
      #     echo "VERSION=$(jq -r '.version' < ./package.json)" >> $GITHUB_ENV

      # - name: Debug VERSION
      #   run: echo "VERSION is '${{ env.VERSION }}'"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to dockerhub
        if: success()
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/2048:${{ github.ref }}

  Deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - uses: actions-hub/kubectl@master
        with:
          args: apply -f hw-deploy.yaml
